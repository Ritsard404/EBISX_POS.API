// <auto-generated />
using System;
using EBISX_POS.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EBISX_POS.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250228024834_EBISX_POS_DATABASE")]
    partial class EBISX_POS_DATABASE
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("EBISX_POS.API.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CtgryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("EBISX_POS.API.Models.DrinkType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DrinkTypeName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DrinkType");
                });

            modelBuilder.Entity("EBISX_POS.API.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddOnId")
                        .HasColumnType("int");

                    b.Property<int?>("DrinksId")
                        .HasColumnType("int");

                    b.Property<decimal>("ItemPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ItemQTY")
                        .HasColumnType("int");

                    b.Property<decimal>("ItemSubTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddOnId");

                    b.HasIndex("DrinksId");

                    b.HasIndex("MenuId");

                    b.HasIndex("OrderId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("EBISX_POS.API.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("DrinkTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("HasAddOn")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasDrink")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsAddOn")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MenuImagePath")
                        .HasColumnType("longtext");

                    b.Property<bool>("MenuIsAvailable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("MenuPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DrinkTypeId");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("EBISX_POS.API.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("OrderType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserEmail");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("EBISX_POS.API.Models.Timestamp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset?>("TsBreakIn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("TsBreakOut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("TsIn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("TsOut")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserEmail");

                    b.ToTable("Timestamp");
                });

            modelBuilder.Entity("EBISX_POS.API.Models.User", b =>
                {
                    b.Property<string>("UserEmail")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserFName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserLName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserEmail");

                    b.ToTable("User");
                });

            modelBuilder.Entity("EBISX_POS.API.Models.Item", b =>
                {
                    b.HasOne("EBISX_POS.API.Models.Menu", "AddOn")
                        .WithMany()
                        .HasForeignKey("AddOnId");

                    b.HasOne("EBISX_POS.API.Models.Menu", "Drinks")
                        .WithMany()
                        .HasForeignKey("DrinksId");

                    b.HasOne("EBISX_POS.API.Models.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EBISX_POS.API.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddOn");

                    b.Navigation("Drinks");

                    b.Navigation("Menu");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("EBISX_POS.API.Models.Menu", b =>
                {
                    b.HasOne("EBISX_POS.API.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EBISX_POS.API.Models.DrinkType", "DrinkType")
                        .WithMany()
                        .HasForeignKey("DrinkTypeId");

                    b.Navigation("Category");

                    b.Navigation("DrinkType");
                });

            modelBuilder.Entity("EBISX_POS.API.Models.Order", b =>
                {
                    b.HasOne("EBISX_POS.API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EBISX_POS.API.Models.Timestamp", b =>
                {
                    b.HasOne("EBISX_POS.API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
